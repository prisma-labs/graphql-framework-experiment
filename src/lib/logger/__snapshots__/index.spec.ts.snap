// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`.<level> log methods accept an event name and optional context 1`] = `
Array [
  Object {
    "context": Object {
      "user": Object {
        "id": 1,
      },
    },
    "event": "hi",
    "hostname": "Jasons-Prisma-Machine.local",
    "level": 30,
    "path": Array [
      "root",
    ],
    "pid": 0,
    "time": 0,
    "v": 1,
  },
  Object {
    "context": Object {},
    "event": "bye",
    "hostname": "Jasons-Prisma-Machine.local",
    "level": 30,
    "path": Array [
      "root",
    ],
    "pid": 0,
    "time": 0,
    "v": 1,
  },
]
`;

exports[`.<level> log methods one for each log level 1`] = `
Array [
  Object {
    "context": Object {},
    "event": "hi",
    "hostname": "Jasons-Prisma-Machine.local",
    "level": 60,
    "path": Array [
      "root",
    ],
    "pid": 0,
    "time": 0,
    "v": 1,
  },
  Object {
    "context": Object {},
    "event": "hi",
    "hostname": "Jasons-Prisma-Machine.local",
    "level": 50,
    "path": Array [
      "root",
    ],
    "pid": 0,
    "time": 0,
    "v": 1,
  },
  Object {
    "context": Object {},
    "event": "hi",
    "hostname": "Jasons-Prisma-Machine.local",
    "level": 40,
    "path": Array [
      "root",
    ],
    "pid": 0,
    "time": 0,
    "v": 1,
  },
  Object {
    "context": Object {},
    "event": "hi",
    "hostname": "Jasons-Prisma-Machine.local",
    "level": 30,
    "path": Array [
      "root",
    ],
    "pid": 0,
    "time": 0,
    "v": 1,
  },
  Object {
    "context": Object {},
    "event": "hi",
    "hostname": "Jasons-Prisma-Machine.local",
    "level": 20,
    "path": Array [
      "root",
    ],
    "pid": 0,
    "time": 0,
    "v": 1,
  },
  Object {
    "context": Object {},
    "event": "hi",
    "hostname": "Jasons-Prisma-Machine.local",
    "level": 10,
    "path": Array [
      "root",
    ],
    "pid": 0,
    "time": 0,
    "v": 1,
  },
]
`;

exports[`.addToContext can be called multiple times, merging deeply 1`] = `
Array [
  Object {
    "context": Object {
      "user": Object {
        "id": 1,
        "name": "Jill",
      },
    },
    "event": "hi",
    "hostname": "Jasons-Prisma-Machine.local",
    "level": 30,
    "path": Array [
      "root",
    ],
    "pid": 0,
    "time": 0,
    "v": 1,
  },
]
`;

exports[`.addToContext gets deeply merged with local context 1`] = `
Array [
  Object {
    "context": Object {
      "user": Object {
        "id": 1,
        "name": "Jill",
      },
    },
    "event": "hi",
    "hostname": "Jasons-Prisma-Machine.local",
    "level": 30,
    "path": Array [
      "root",
    ],
    "pid": 0,
    "time": 0,
    "v": 1,
  },
]
`;

exports[`.addToContext local context takes prescedence over pinned context 1`] = `
Array [
  Object {
    "context": Object {
      "user": Object {
        "id": 2,
      },
    },
    "event": "hi",
    "hostname": "Jasons-Prisma-Machine.local",
    "level": 30,
    "path": Array [
      "root",
    ],
    "pid": 0,
    "time": 0,
    "v": 1,
  },
]
`;

exports[`.addToContext pins context for all subsequent logs from the logger 1`] = `
Array [
  Object {
    "context": Object {
      "user": Object {
        "id": 1,
      },
    },
    "event": "hi",
    "hostname": "Jasons-Prisma-Machine.local",
    "level": 30,
    "path": Array [
      "root",
    ],
    "pid": 0,
    "time": 0,
    "v": 1,
  },
]
`;

exports[`.child creates a sub logger 1`] = `
Array [
  Object {
    "context": Object {},
    "event": "hi",
    "hostname": "Jasons-Prisma-Machine.local",
    "level": 30,
    "path": Array [
      "root",
      "tim",
    ],
    "pid": 0,
    "time": 0,
    "v": 1,
  },
]
`;

exports[`.child inherits level from parent 1`] = `
Array [
  Object {
    "context": Object {},
    "event": "hi",
    "hostname": "Jasons-Prisma-Machine.local",
    "level": 10,
    "path": Array [
      "root",
      "tim",
    ],
    "pid": 0,
    "time": 0,
    "v": 1,
  },
]
`;

exports[`.child is unable to change context of siblings 1`] = `
Array [
  Object {
    "context": Object {
      "foo": "bar",
      "from": "b1",
    },
    "event": "foo",
    "hostname": "Jasons-Prisma-Machine.local",
    "level": 30,
    "path": Array [
      "root",
      "b1",
    ],
    "pid": 0,
    "time": 0,
    "v": 1,
  },
  Object {
    "context": Object {
      "foo": "bar",
      "from": "b2",
    },
    "event": "foo",
    "hostname": "Jasons-Prisma-Machine.local",
    "level": 30,
    "path": Array [
      "root",
      "b2",
    ],
    "pid": 0,
    "time": 0,
    "v": 1,
  },
  Object {
    "context": Object {
      "foo": "bar",
      "from": "b3",
    },
    "event": "foo",
    "hostname": "Jasons-Prisma-Machine.local",
    "level": 30,
    "path": Array [
      "root",
      "b3",
    ],
    "pid": 0,
    "time": 0,
    "v": 1,
  },
]
`;

exports[`.child reacts to level changes in root logger 1`] = `
Array [
  Object {
    "context": Object {},
    "event": "foo",
    "hostname": "Jasons-Prisma-Machine.local",
    "level": 10,
    "path": Array [
      "root",
      "b",
    ],
    "pid": 0,
    "time": 0,
    "v": 1,
  },
]
`;

exports[`demo runs a demo with fake data, pretty, all levels active 1`] = `
Array [
  "",
  "-----------",
  "LOGGER DEMO",
  "-----------",
  "‚úï root:foo  --  lib: /see/
",
  "‚ñ† root:foo  --  har: { mar: 'tek' }  jar: [
  1, 2, 3, 4, 4, 5, 6,
  6, 7, 9, 1, 2, 4, 5,
  6, 7, 3, 6, 5, 4
]  kio: [Object: null prototype] [foo] {}
",
  "‚ñ≤ root:foo  --  bleep: [ 1, '2', true ]
",
  "‚óè root:foo
",
  "‚óã root:foo
  | results  [
  |             { userId: 1, id: 1, title: 'delectus aut autem', completed: false },
  |             { userId: 1, id: 2, title: 'quis ut nam facilis et officia qui', completed: false },
  |             { userId: 1, id: 3, title: 'fugiat veniam minus', completed: false },
  |             { userId: 1, id: 4, title: 'et porro tempora', completed: true },
  |             { userId: 1, id: 5, title: 'laboriosam mollitia et enim quasi adipisci quia provident illum', completed: false }
  |           ]
  | tri      'wiz'
  | on       false
",
  "‚óã root:foo  --  foo: 'bar'
",
  "‚Äî root:foo  --  a: 1  b: 2  c: 'three'
",
  "-----------",
  "",
]
`;

exports[`output defaults to stdout for all levels 1`] = `
Array [
  Object {
    "context": Object {},
    "event": "foo",
    "hostname": "Jasons-Prisma-Machine.local",
    "level": 60,
    "path": Array [
      "root",
    ],
    "pid": 0,
    "time": 0,
    "v": 1,
  },
]
`;

exports[`settings pretty .color controls if pretty logs have color or not 1`] = `
Array [
  "‚óè root:foo  --  qux: true
",
]
`;

exports[`settings pretty .enabled controls if logs are rendered pretty or as JSON 1`] = `
Array [
  Object {
    "context": Object {},
    "event": "foo",
    "hostname": "Jasons-Prisma-Machine.local",
    "level": 30,
    "path": Array [
      "root",
    ],
    "pid": 0,
    "time": 0,
    "v": 1,
  },
  "",
  "-----------",
  "LOGGER DEMO",
  "-----------",
  "[31m‚úï root[39m[90m:[39mfoo[90m  --  [39m[90mlib[39m[90m: [39m[31m/see/[39m
",
  "[31m‚ñ† root[39m[90m:[39mfoo[90m  --  [39m[90mhar[39m[90m: [39m{ mar: [32m'tek'[39m }  [90mjar[39m[90m: [39m[
  [33m1[39m, [33m2[39m, [33m3[39m, [33m4[39m, [33m4[39m, [33m5[39m, [33m6[39m,
  [33m6[39m, [33m7[39m, [33m9[39m, [33m1[39m, [33m2[39m, [33m4[39m, [33m5[39m,
  [33m6[39m, [33m7[39m, [33m3[39m, [33m6[39m, [33m5[39m, [33m4[39m
]  [90mkio[39m[90m: [39m[Object: null prototype] [foo] {}
",
  "[33m‚ñ≤ root[39m[90m:[39mfoo[90m  --  [39m[90mbleep[39m[90m: [39m[ [33m1[39m, [32m'2'[39m, [33mtrue[39m ]
",
  "[32m‚óè root[39m[90m:[39mfoo
",
  "[34m‚óã root[39m[90m:[39mfoo[90m[39m
[90m  | [39m[90mresults[39m  [
[90m  | [39m            { userId: [33m1[39m, id: [33m1[39m, title: [32m'delectus aut autem'[39m, completed: [33mfalse[39m },
[90m  | [39m            { userId: [33m1[39m, id: [33m2[39m, title: [32m'quis ut nam facilis et officia qui'[39m, completed: [33mfalse[39m },
[90m  | [39m            { userId: [33m1[39m, id: [33m3[39m, title: [32m'fugiat veniam minus'[39m, completed: [33mfalse[39m },
[90m  | [39m            { userId: [33m1[39m, id: [33m4[39m, title: [32m'et porro tempora'[39m, completed: [33mtrue[39m },
[90m  | [39m            { userId: [33m1[39m, id: [33m5[39m, title: [32m'laboriosam mollitia et enim quasi adipisci quia provident illum'[39m, completed: [33mfalse[39m }
[90m  | [39m          ][90m[39m
[90m  | [39m[90mtri    [39m  [32m'wiz'[39m[90m[39m
[90m  | [39m[90mon     [39m  [33mfalse[39m
",
  "[34m‚óã root[39m[90m:[39mfoo[90m  --  [39m[90mfoo[39m[90m: [39m[32m'bar'[39m
",
  "[35m‚Äî root[39m[90m:[39mfoo[90m  --  [39m[90ma[39m[90m: [39m[33m1[39m  [90mb[39m[90m: [39m[33m2[39m  [90mc[39m[90m: [39m[32m'three'[39m
",
  "-----------",
  "",
]
`;

exports[`settings pretty .levelLabel controls if label is spelt out or not 1`] = `
Array [
  "‚úï fatal root:foo
",
  "‚ñ† error root:foo
",
  "‚ñ≤ warn  root:foo
",
  "‚óè info  root:foo
",
  "‚óã debug root:foo
",
]
`;

exports[`settings pretty context formatting multiline objects are formatted by util.inspect compact: yes 1`] = `
Array [
  "‚óè root:foo
  | ke1  {
  |         a: {
  |           b: { c: true, d: 'looooooooooooooooooooooooooooooooooooooooooooooooong' }
  |         }
  |       }
",
]
`;

exports[`settings pretty context formatting multiline used if context does fit singleline (multiple key-values) 1`] = `
Array [
  "‚óè root:foo
  | ke1  'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'
  | ke2  'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'
",
]
`;

exports[`settings pretty context formatting multiline used if context does not fit singleline 1`] = `
Array [
  "‚óè root:foo
  | key  'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'
",
]
`;

exports[`settings pretty context formatting singleline objects are formatted by util.inspect compact: yes 1`] = `
Array [
  "‚óè root:foo  --  ke1: { a: { b: { c: true } } }
",
]
`;

exports[`settings pretty context formatting singleline used if context does fit singleline (multiple key-values) 1`] = `
Array [
  "‚óè root:foo  --  ke1: 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'  ke2: 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'
",
]
`;

exports[`settings pretty context formatting singleline used if context does fit singleline 1`] = `
Array [
  "‚óè root:foo  --  key: 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'
",
]
`;
