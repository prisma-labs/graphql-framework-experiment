// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`.<level> log methods accept an event name and optional context 1`] = `
Array [
  Object {
    "context": Object {
      "user": Object {
        "id": 1,
      },
    },
    "event": "hi",
    "hostname": "mock-host",
    "level": 30,
    "path": Array [
      "root",
    ],
    "pid": 0,
    "time": 0,
    "v": 1,
  },
  Object {
    "context": Object {},
    "event": "bye",
    "hostname": "mock-host",
    "level": 30,
    "path": Array [
      "root",
    ],
    "pid": 0,
    "time": 0,
    "v": 1,
  },
]
`;

exports[`.<level> log methods one for each log level 1`] = `
Array [
  Object {
    "context": Object {},
    "event": "hi",
    "hostname": "mock-host",
    "level": 60,
    "path": Array [
      "root",
    ],
    "pid": 0,
    "time": 0,
    "v": 1,
  },
  Object {
    "context": Object {},
    "event": "hi",
    "hostname": "mock-host",
    "level": 50,
    "path": Array [
      "root",
    ],
    "pid": 0,
    "time": 0,
    "v": 1,
  },
  Object {
    "context": Object {},
    "event": "hi",
    "hostname": "mock-host",
    "level": 40,
    "path": Array [
      "root",
    ],
    "pid": 0,
    "time": 0,
    "v": 1,
  },
  Object {
    "context": Object {},
    "event": "hi",
    "hostname": "mock-host",
    "level": 30,
    "path": Array [
      "root",
    ],
    "pid": 0,
    "time": 0,
    "v": 1,
  },
  Object {
    "context": Object {},
    "event": "hi",
    "hostname": "mock-host",
    "level": 20,
    "path": Array [
      "root",
    ],
    "pid": 0,
    "time": 0,
    "v": 1,
  },
  Object {
    "context": Object {},
    "event": "hi",
    "hostname": "mock-host",
    "level": 10,
    "path": Array [
      "root",
    ],
    "pid": 0,
    "time": 0,
    "v": 1,
  },
]
`;

exports[`.addToContext can be called multiple times, merging deeply 1`] = `
Array [
  Object {
    "context": Object {
      "user": Object {
        "id": 1,
        "name": "Jill",
      },
    },
    "event": "hi",
    "hostname": "mock-host",
    "level": 30,
    "path": Array [
      "root",
    ],
    "pid": 0,
    "time": 0,
    "v": 1,
  },
]
`;

exports[`.addToContext gets deeply merged with local context 1`] = `
Array [
  Object {
    "context": Object {
      "user": Object {
        "id": 1,
        "name": "Jill",
      },
    },
    "event": "hi",
    "hostname": "mock-host",
    "level": 30,
    "path": Array [
      "root",
    ],
    "pid": 0,
    "time": 0,
    "v": 1,
  },
]
`;

exports[`.addToContext local context takes prescedence over pinned context 1`] = `
Array [
  Object {
    "context": Object {
      "user": Object {
        "id": 2,
      },
    },
    "event": "hi",
    "hostname": "mock-host",
    "level": 30,
    "path": Array [
      "root",
    ],
    "pid": 0,
    "time": 0,
    "v": 1,
  },
]
`;

exports[`.addToContext pins context for all subsequent logs from the logger 1`] = `
Array [
  Object {
    "context": Object {
      "user": Object {
        "id": 1,
      },
    },
    "event": "hi",
    "hostname": "mock-host",
    "level": 30,
    "path": Array [
      "root",
    ],
    "pid": 0,
    "time": 0,
    "v": 1,
  },
]
`;

exports[`.child creates a sub logger 1`] = `
Array [
  Object {
    "context": Object {},
    "event": "hi",
    "hostname": "mock-host",
    "level": 30,
    "path": Array [
      "root",
      "tim",
    ],
    "pid": 0,
    "time": 0,
    "v": 1,
  },
]
`;

exports[`.child inherits level from parent 1`] = `
Array [
  Object {
    "context": Object {},
    "event": "hi",
    "hostname": "mock-host",
    "level": 10,
    "path": Array [
      "root",
      "tim",
    ],
    "pid": 0,
    "time": 0,
    "v": 1,
  },
]
`;

exports[`.child is unable to change context of siblings 1`] = `
Array [
  Object {
    "context": Object {
      "foo": "bar",
      "from": "b1",
    },
    "event": "foo",
    "hostname": "mock-host",
    "level": 30,
    "path": Array [
      "root",
      "b1",
    ],
    "pid": 0,
    "time": 0,
    "v": 1,
  },
  Object {
    "context": Object {
      "foo": "bar",
      "from": "b2",
    },
    "event": "foo",
    "hostname": "mock-host",
    "level": 30,
    "path": Array [
      "root",
      "b2",
    ],
    "pid": 0,
    "time": 0,
    "v": 1,
  },
  Object {
    "context": Object {
      "foo": "bar",
      "from": "b3",
    },
    "event": "foo",
    "hostname": "mock-host",
    "level": 30,
    "path": Array [
      "root",
      "b3",
    ],
    "pid": 0,
    "time": 0,
    "v": 1,
  },
]
`;

exports[`.child reacts to level changes in root logger 1`] = `
Array [
  Object {
    "context": Object {},
    "event": "foo",
    "hostname": "mock-host",
    "level": 10,
    "path": Array [
      "root",
      "b",
    ],
    "pid": 0,
    "time": 0,
    "v": 1,
  },
]
`;

exports[`output defaults to stdout for all levels 1`] = `
Array [
  Object {
    "context": Object {},
    "event": "foo",
    "hostname": "mock-host",
    "level": 60,
    "path": Array [
      "root",
    ],
    "pid": 0,
    "time": 0,
    "v": 1,
  },
]
`;

exports[`settings pretty .color controls if pretty logs have color or not 1`] = `
Array [
  "● root:foo  --  qux: true
",
]
`;

exports[`settings pretty .levelLabel controls if label is spelt out or not 1`] = `
Array [
  "✕ fatal root:foo
",
  "■ error root:foo
",
  "▲ warn  root:foo
",
  "● info  root:foo
",
  "○ debug root:foo
",
]
`;

exports[`settings pretty context formatting multiline used if context does fit singleline (multiple key-values) 1`] = `
Array [
  "● root:foo
  | ke1  'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'
  | ke2  'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'
",
]
`;

exports[`settings pretty context formatting multiline used if context does not fit singleline 1`] = `
Array [
  "● root:foo
  | key  'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'
",
]
`;

exports[`settings pretty context formatting singleline used if context does fit singleline (multiple key-values) 1`] = `
Array [
  "● root:foo  --  ke1: 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'  ke2: 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'
",
]
`;

exports[`settings pretty context formatting singleline used if context does fit singleline 1`] = `
Array [
  "● root:foo  --  key: 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'
",
]
`;
